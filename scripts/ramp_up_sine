alias: Aquarium Ramp - Sinusoidal
variables:
  direction: "up"           # Set to "up" for ramp up or "down" for ramp down
  delay_time: "00:00:01"    # Time delay between steps
  step_count: 100           # Total number of steps in the ramp
  peak_brightness:          # RGBW peak brightness values
    - 255
    - 235
    - 221
    - 255
sequence:
  - repeat:
      count: "{{ step_count }}"
      sequence:
        - variables:
            i: >-
              {% if direction == "up" %}
                {{ repeat.index }}
              {% else %}
                {{ step_count - repeat.index }}
              {% endif %}
        - service: light.turn_on
          data_template:
            entity_id: light.[your-light-id]
            rgbw_color:
              - >-
                {{ (sin(pi * (i / step_count) / 2) *
                peak_brightness[0]) | int }}
              - >-
                {{ (sin(pi * (i / step_count) / 2) *
                peak_brightness[1]) | int }}
              - >-
                {{ (sin(pi * (i / step_count) / 2) *
                peak_brightness[2]) | int }}
              - >-
                {{ (sin(pi * (i / step_count) / 2) *
                peak_brightness[3]) | int }}
        - delay: "{{ delay_time }}"
description: >-
  Ramps light brightness up or down using a sinusoidal curve, based on the
  direction variable ("up" or "down").
icon: mdi:chart-bell-curve-cumulative
